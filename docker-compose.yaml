services:
  ghost:
    image: ghost:latest
    environment:
      url: https://${DOMAIN}
      database__client: mysql
      database__connection__host: mysql
      database__connection__user: ${DB_USER_GHOST}
      database__connection__password: ${DB_PASSWORD_GHOST}
      database__connection__database: ${DB_NAME_GHOST}
      database__connection__port: 3306
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - dokploy-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ghost.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.ghost.entrypoints=websecure"
      - "traefik.http.routers.ghost.tls.certResolver=letsencrypt"
      - "traefik.http.services.ghost.loadbalancer.server.port=2368"

  apache-answer:
    build:
      context: .
      dockerfile: ./Dockerfile
    environment:
      DB_TYPE: mysql
      DB_HOST: mysql
      DB_USERNAME: ${DB_USER_APACHE_ANSWER}
      DB_PASSWORD: ${DB_PASSWORD_APACHE_ANSWER}
      LANGUAGE: de_DE
      SITE_NAME: Community
      DB_NAME: ${DB_NAME_APACHE_ANSWER}
      ADMIN_NAME: admin
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      CONTACT_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ANSWER_ADMIN_PASSWORD}
      SITE_URL: https://${DOMAIN}/community
      AUTO_INSTALL: true
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./configs/config.yaml:/data/conf/config.yaml
    networks:
      - dokploy-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.apache-answer.rule=Host(`${DOMAIN}`) && PathPrefix(`/community`)"
      - "traefik.http.routers.apache-answer.entrypoints=websecure"
      - "traefik.http.routers.apache-answer.tls.certResolver=letsencrypt"
      - "traefik.http.services.apache-answer.loadbalancer.server.port=4747"
      - "traefik.http.middlewares.apache-answer-stripprefix.stripprefix.prefixes=/community"
      - "traefik.http.routers.apache-answer.middlewares=apache-answer-stripprefix"

  mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 2s
      timeout: 1s
      retries: 3
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - dokploy-network

volumes:
  mysql-data:

networks:
  dokploy-network:
    external: true
