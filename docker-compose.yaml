services:
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - ghost
      - apache-answer
    environment:
      - COOLIFY_FQDN=${COOLIFY_FQDN:-nginx.waack.dev} # Fallback for local testing
    networks:
      - coolify-network # Match Coolifyâ€™s network

  ghost:
    image: ghost:latest
    container_name: ghost
    environment:
      url: http://localhost # Update this to match your domain if needed
      database__client: mysql
      database__connection__host: mysql
      database__connection__user: ${DB_USER_GHOST}
      database__connection__password: ${DB_PASSWORD_GHOST}
      database__connection__database: ${DB_NAME_GHOST}
      database__connection__port: 3306
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - coolify-network

  apache-answer:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: apache-answer
    environment:
      DB_TYPE: mysql
      DB_HOST: mysql
      DB_USERNAME: ${DB_USER_APACHE_ANSWER}
      DB_PASSWORD: ${DB_PASSWORD_APACHE_ANSWER}
      LANGUAGE: de_DE
      SITE_NAME: Community
      DB_NAME: ${DB_NAME_APACHE_ANSWER}
      ADMIN_NAME: admin
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      CONTACT_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ANSWER_ADMIN_PASSWORD}
      SITE_URL: http://localhost:4747/community # Update this if needed
      AUTO_INSTALL: true
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./configs/config.yaml:/data/conf/config.yaml
    networks:
      - coolify-network

  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 2s
      timeout: 1s
      retries: 3
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - coolify-network

volumes:
  mysql-data:
