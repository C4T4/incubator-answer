worker_processes 1;

events {
    worker_connections 1024;
}

http {
    # Upstream definitions to reference services by Docker container names
    upstream ghost_backend {
        server ghost:2368;  # Matches service name in docker-compose
    }

    upstream apache_answer_backend {
        server apache-answer:4747;  # Matches service name in docker-compose
    }

    server {
        listen 80;

        # Use Coolify's FQDN or fallback to $host
        server_name $http_host;

        # Handle API requests with "/api/" under "/community/"
        location ~ ^/community/.*api/ {
            rewrite ^/community/(.*)$ /$1 break;  # Strip /community
            proxy_pass http://apache_answer_backend;  # Use upstream
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Handle all other /community/ requests
        location /community/ {
            proxy_pass http://apache_answer_backend/;  # Trailing slash for path preservation
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Root location for Ghost
        location / {
            # Avoid conflicts with /community
            if ($uri ~ ^/community) {
                return 404;
            }
            proxy_pass http://ghost_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}